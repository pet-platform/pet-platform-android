name: Auto_Release

on:
  push:
    tags:
      - 'v*'
  
jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      checks: write
      pull-requests: read
      contents: write
      issues: read
      actions: read

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'corretto'
        cache: gradle

    - name: Set up Android SDK
      uses: android-actions/setup-android@v2
        
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Build with Gradle
      run: ./gradlew build

    - name: Build release APK
      id: buildRelease
      run: bash ./gradlew assembleRelease --stacktrace
    
    - name: Sign APK
      id: sign
      uses: r0adkll/sign-android-release@v1
      with:
        releaseDirectory: app/build/outputs/apk/release
        signingKeyBase64: ${{ secrets.SIGNING_KEY }}
        alias: ${{ secrets.ALIAS }}
        keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
        keyPassword: ${{ secrets.KEY_PASSWORD }}   
    
    - name: Upload APK
      uses: actions/upload-artifact@v3
      with:
        name: app
        path: app/build/outputs/apk/release/app-release-unsigned-signed.apk

    - name: Get version from tag
      id: tag_name
      run: |
        echo :: "current_version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
      shell: bash

    - name: Get Changelog Entry
      id: changelog_reader
      uses: mindsers/changelog-reader-action@v2
      with:
        version: ${{ steps.tag_name.outputs.current_version }}
        path: ./CHANGELOG.md

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: ${{ steps.changelog_reader.outputs.changes }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: app/build/outputs/apk/release/app-release-unsigned-signed.apk
        asset_name: app-release.apk
        asset_content_type: application/zip